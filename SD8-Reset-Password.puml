@startuml
title Reset Password

actor User
participant "Frontend" as FE
participant Router
participant "Middleware" as MW
participant "User Controller" as UC
participant "User Service" as US
participant "User Repository" as UR
participant "Database" as DB
participant "Email Service" as ES

'Phase 1: Request Reset Password'
activate FE
User -> FE: handleForgotPasswordClick()
FE -> User: displayForgotPasswordForm()
User -> FE: handleForgotPasswordSubmit(username, email)
FE -> Router: POST /api/users/reset-password-request {username, email}
activate Router
Router -> MW: validateRequest()
activate MW
MW -> UC: ResetPasswordRequest(username, email)
deactivate MW
activate UC
UC -> UC: validatePayload()
alt Invalid Payload (4b.1)
    UC -> Router: returnErrorResponse(400,"ข้อมูลไม่ครบถ้วนหรือข้อมูลไม่ถูกต้อง")
    Router -> FE: errorResponse(400)
    deactivate Router
else Valid Payload
    UC -> US: ResetPasswordRequest(username, email)
    activate US
    US -> UR: findUserByUsernameAndEmail(username, email)
    activate UR
    UR -> DB:  SELECT user_id, email, username FROM Users WHERE email = <email> OR username = <username>;
    activate DB
    DB -->> UR: userRecord
    deactivate DB
    alt User Not Found (5b.1)
        UR -->> US: nil
        deactivate UR
        US -> UC: returnError("ไม่พบชื่อบัญชีที่ลงทะเบียนกับอีเมลนี้")
        deactivate US
        UC -> Router: returnErrorResponse(404,"ไม่พบชื่อบัญชีที่ลงทะเบียนกับอีเมลนี้")
        Router -> FE: errorResponse(404)
        FE -> User: Show Error "User Not Found"
        deactivate MW
    else User Found
        UR -->> US: userRecord
        deactivate UR
        US -> UC: userRecord
        deactivate US
        UC -> ES: sendResetPasswordEmail(userRecord)
        activate ES
        ES -->> User: sendEmail(resetTokenLink)
        deactivate ES
        UC -> Router: returnSuccessResponse(200,"กรุณาตรวจสอบอีเมล")
        Router -> FE: successResponse(200)
        deactivate UC
        deactivate MW
    end
end
FE -> User: displayMessage("Reset email sent")
deactivate FE

'Phase 2: Execute Reset Password'
User -> FE: handleResetPasswordLinkClick(token)
activate FE
FE -> User: displayResetPasswordForm()
User -> FE: handleResetPasswordSubmit(token, newPassword, confirmPassword)
FE -> Router: POST /api/users/reset-password {token, newPassword, confirmPassword}
activate Router
Router -> MW: validateRequest()
activate MW
MW -> UC: ResetPassword(token, newPassword, confirmPassword)
deactivate MW
activate UC
UC -> UC: validateToken(token)
    UC -> UC: validateNewPassword(newPassword, confirmPassword)
    alt Passwords Don't Match (9b.2b.1)
        UC -> Router: returnErrorResponse(400, "รหัสผ่านไม่ตรงกัน")
        Router -> FE: returnErrorResponse(400, "กรุณากรอกรหัสผ่านให้ตรงกัน")
        FE -> User: Show Error "Passwords Don't Match"
        deactivate UC
    else Password Too Weak (9b.2a.1)
        UC -> Router: returnErrorResponse(400, "รหัสผ่านไม่ผ่านเงื่อนไขขั้นต่ำ")
        Router -> FE: returnErrorResponse(400, "รหัสผ่านต้องมีความยาว 8 ตัวอักษรขึ้นไป และมีอักษรตัวพิมพ์เล็ก, ตัวพิมพ์ใหญ่ และตัวเลขอย่างน้อย 1 ตัว")
        FE -> User: Show Error "Password Too Weak"
        deactivate Router
        deactivate UC
    else Valid New Password
        UC -> US: ResetPassword(token, newPassword)
        activate US
        US -> UR: updateUserPasswordByToken(token, hash(newPassword))
        activate UR
        UR -> DB: UPDATE Users SET password = <HashedPassword> WHERE user_id = <user_id>;
        activate DB
        DB -->> UR: affectedRows
        deactivate DB
        alt DB Error (11b.1)
            UR -->> US: failure
            deactivate UR
            US -> UC: returnError("การบันทึกรหัสผ่านล้มเหลว")
            deactivate US
            UC -> Router: returnErrorResponse(500,"เกิดข้อผิดพลาด ไม่สามารถเปลี่ยนรหัสผ่านได้ในขณะนี้")
            Router -> FE: errorResponse(500,"เกิดข้อผิดพลาด ไม่สามารถเปลี่ยนรหัสผ่านได้ในขณะนี้")
            FE -> User: Show Error "ไม่สามารถเปลี่ยนรหัสผ่านได้ในขณะนี"
            deactivate Router
            deactivate UC
        else Password Update Success
            UR -->> US: success
            deactivate UR
            US -> UC: success
            deactivate US
            UC -> Router: returnSuccessResponse(200,"แก้ไขรหัสผ่านสำเร็จ")
            deactivate UC
            Router -> FE: successResponse(200,"แก้ไขรหัสผ่านสำเร็จ")
            deactivate MW
            deactivate Router
            FE -> User: showResetSuccessMessage()
        end
    end
deactivate FE

@enduml
