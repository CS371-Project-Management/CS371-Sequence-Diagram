@startuml
title Reset Password Flow

actor User
participant "Frontend" as FE
participant Router
participant "Middleware" as MW
participant "User Controller" as AC
participant "User Service" as US
participant "User Repository" as UR
participant "Database" as DB
participant "Email Service" as ES

'Request Reset Password'
activate FE
User -> FE: handleForgotPasswordClick()
FE -> User: displayForgotPasswordForm()

User -> FE: handleForgotPasswordSubmit(username, email)
FE -> Router: POST /api/users/reset-password-request {username, email}
activate Router
Router -> MW: validateRequest()
activate MW
MW -> AC: ResetPasswordRequest(username, email)
activate AC
AC -> AC: validatePayload()
alt invalidPayload (4.1a)
    AC -> MW: returnError("ข้อมูลไม่ครบถ้วนหรือข้อมูลไม่ถูกต้อง")
    MW -> Router: returnErrorResponse(400)
    Router -> FE: errorResponse(400)
    deactivate AC
    deactivate MW
    deactivate Router
else validPayload
    AC -> US: ResetPasswordRequest(username, email)
    activate US
    US -> UR: findUserByUsernameAndEmail(username, email)
    activate UR
    UR -> DB: SELECT id, username, email FROM users WHERE username=? AND email=?
    activate DB
    DB -->> UR: userRecord
    deactivate DB
    alt userNotFound (5.1a)
        UR -->> US: nil
        deactivate UR
        US -> AC: returnError("ไม่พบชื่อบัญชีที่ลงทะเบียนกับอีเมลนี้")
        deactivate US
        AC -> MW: returnError("ไม่พบชื่อบัญชีที่ลงทะเบียนกับอีเมลนี้")
        MW -> Router: returnErrorResponse(404)
        Router -> FE: errorResponse(404)
        deactivate AC
        deactivate MW
        deactivate Router
    else userFound
        UR -->> US: userRecord
        deactivate UR
        US -> AC: userRecord
        deactivate US
        AC -> ES: sendResetPasswordEmail(userRecord)
        activate ES
        ES -->> User: sendEmail(resetTokenLink)
        deactivate ES
        AC -> MW: returnSuccess("กรุณาตรวจสอบอีเมล")
        MW -> Router: returnSuccessResponse(200)
        Router -> FE: successResponse(200)
        deactivate AC
        deactivate MW
        deactivate Router
    end
end
FE -> User: displayMessage("Reset email sent")
'deactivate FE'

'==== Phase 2: Execute Reset Password ====
'activate FE'
User -> FE: handleResetPasswordLinkClick(token)
FE -> User: displayResetPasswordForm()

User -> FE: handleResetPasswordSubmit(token, newPassword)
FE -> Router: POST /api/users/reset-password {token, newPassword}
activate Router
Router -> MW: validateRequest()
activate MW
MW -> AC: ResetPassword(token, newPassword)
activate AC
AC -> AC: validateToken(token)
AC -> AC: validateNewPassword(newPassword)
alt invalidNewPassword (9.1a)
    AC -> MW: returnError("รหัสผ่านไม่ผ่านเงื่อนไขขั้นต่ำที่กำหนด")
    MW -> Router: returnErrorResponse(400)
    Router -> FE: errorResponse(400)
    deactivate AC
    deactivate MW
    deactivate Router
else validNewPassword
    AC -> US: ResetPassword(token, newPassword)
    activate US
    US -> UR: updateUserPasswordByToken(token, hash(newPassword))
    activate UR
    UR -> DB: UPDATE users SET password=? WHERE reset_token=?
    activate DB
    DB -->> UR: affectedRows
    deactivate DB
    alt updateFailed (10.1a)
        UR -->> US: error("Update failed")
        deactivate UR
        US -> AC: returnError("ไม่สามารถบันทึกการแก้ไขรหัสผ่านได้")
        deactivate US
        AC -> MW: returnError("ไม่สามารถบันทึกการแก้ไขรหัสผ่านได้")
        MW -> Router: returnErrorResponse(500)
        Router -> FE: errorResponse(500)
        deactivate AC
        deactivate MW
        deactivate Router
    else updateSuccess
        UR -->> US: success
        deactivate UR
        US -> AC: success
        deactivate US
        AC -> MW: returnSuccess("แก้ไขรหัสผ่านสำเร็จ")
        MW -> Router: returnSuccessResponse(200)
        Router -> FE: successResponse(200)
        deactivate AC
        deactivate MW
        deactivate Router
        FE -> User: showResetSuccessMessage()
    end
end
deactivate FE

@enduml
