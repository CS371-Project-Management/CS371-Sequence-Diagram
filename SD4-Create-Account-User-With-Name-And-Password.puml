@startuml SequenceDiagram
title Create Account User With Name And Password

actor User
participant ": Frontend" as Frontend
participant ": Router" as Router
participant ": Middleware" as Middleware

participant ": UserController" as Controller
participant ": UserService" as Service
participant ": UserRepository" as Repository

database Database

activate Frontend #LightBlue

User -> Frontend: .handleCreateAccountClick()
Frontend --> User: Show create account form

User -> Frontend: .handleCreateAccountSubmit(username, password, email, firstname, lastname)
Frontend -> Frontend: Validate(username, password, email, firstname, lastname)
alt Invalid input
  Frontend --> User: Show error "Invalid input"
else Valid input
  Frontend -> Router: POST /api/users
  activate Router #LightGreen

  Router -> Middleware: .Use(Middleware)
  activate Middleware #LightPink
  Middleware -> Middleware : .Verify()

  alt Unauthorized (new account creation allowed)
    Middleware --> Router: Continue
    deactivate Middleware
    Router -> Controller: .CreateUser(username, password, email, firstname, lastname)
    activate Controller #LightBlue

    Controller -> Service: .CreateUser(username, password, email, firstname, lastname)
    activate Service #LightGreen

    Service -> Repository: .CheckUserExists(username, email)
    activate Repository #LightPink
    Repository -> Database: SELECT user_id FROM Users WHERE username = @username OR email = @email
    activate Database #LightGray
    Database --> Repository: existingUsers
    deactivate Database

    alt existingUsers not empty
      Repository --> Service: Error "Username or email already exists"
      deactivate Repository
      Service --> Controller: Error "Username or email already exists"
      deactivate Service
      Controller --> Router: 409 Conflict "Username or email already exists"
      deactivate Controller
      Router --> Frontend: 409 Conflict "Username or email already exists"
      deactivate Router
      Frontend --> User: Show error "Username or email already exists"
    else
      Repository --> Service: No existing users
      deactivate Repository

      Service -> Service: .HashPassword(password)
      Service -> Repository: .CreateUser(username, hashedPassword, email, firstname, lastname)
      activate Repository #LightPink
      Repository -> Database: INSERT INTO Users (username, password, email, role, firstname, lastname) \nVALUES (@username, @hashedPassword, @email, "student", @firstname, @lastname)
      activate Database #LightGray
      Database --> Repository: newUser, Error
      deactivate Database

      alt Error occurred
        Repository --> Service: Error "Database error"
        deactivate Repository
        Service --> Controller: Error "Account creation failed"
        deactivate Service
        Controller --> Router: 500 Internal Server Error
        deactivate Controller
        Router --> Frontend: 500 Internal Server Error
        deactivate Router
        Frontend --> User: Show error "Account creation failed"
      else
        Repository --> Service: newUser
        deactivate Repository
        Service --> Controller: newUser
        deactivate Service
        Controller --> Router: 201 Created
        deactivate Controller
        Router --> Frontend: 201 Created
        deactivate Router
        Frontend --> User: Show success "Account created successfully"
      end
    end
  end
end

deactivate Frontend
@enduml