@startuml
title Log In With Username And Password
actor User
participant ": Frontend" as Frontend
participant ": Router" as Router
participant ": Middleware" as Middleware

participant ": UserController" as Controller
participant ": UserService" as Service
participant ": UserRepository" as Repository

database Database
activate Frontend
User -> Frontend: .handleLogInClick()
Frontend -->> User: Show login form

User -> Frontend: .handleLogInSubmit(username, password)
alt Invalid
  Frontend -->> User: Show error "Invalid input"
else Valid
  Frontend -> Router: POST /api/login
  activate Router
  Router -> Controller: .LogIn(username, password)
  activate Controller
  Controller -> Service: .LogIn(username, password)
  activate Service
  Service -> Service: .HashPassword(password)
  Service -> Repository: .LogIn(username, password)
  activate Repository
  Repository -> Database: SELECT user_id, email, password, username, role, firstname, lastname FROM Users WHERE user_id = <user_id> AND password = <hashedPassword>;
  activate Database
  Database -->> Repository: User, Error
  deactivate Database
  Repository -->> Service: User, Error
  deactivate Repository

  alt Error != Null
    Service -->> Controller: User, Error
    Controller -->> Router: 401 Unauthorized
    Router -->> Frontend: 401 Unauthorized
    Frontend -->> User: Show error "Invalid username or password"
  else User == Null
    Service -->> Controller: User, Error
    Controller -->> Router: 404 Not Found
    Router -->> Frontend: 404 Not Found
    Frontend -->> User: Show error "User not found"
  else
    Service -> Repository: .GetSessionToken(username)
    activate Repository
    Repository -->> Service: SessionToken
    deactivate Repository
    Service ->> Service: .SetSessionToken(SessionToken)
    Service -->> Controller: User with SessionToken
    deactivate Service
    Controller -->> Router: 200 OK
    Router -->> Frontend: 200 OK
    Frontend -->> User: Show success "Logged in"
  end
  deactivate Service
end
@enduml